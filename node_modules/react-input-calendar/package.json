{
  "_args": [
    [
      {
        "raw": "react-input-calendar",
        "scope": null,
        "escapedName": "react-input-calendar",
        "name": "react-input-calendar",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/dev6/Desktop/test-video"
    ]
  ],
  "_from": "react-input-calendar@latest",
  "_id": "react-input-calendar@0.4.1",
  "_inCache": true,
  "_location": "/react-input-calendar",
  "_nodeVersion": "6.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-input-calendar-0.4.1.tgz_1497116701915_0.9349435742478818"
  },
  "_npmUser": {
    "name": "rudeg",
    "email": "rudenko.sergey92@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-input-calendar",
    "scope": null,
    "escapedName": "react-input-calendar",
    "name": "react-input-calendar",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/react-input-calendar/-/react-input-calendar-0.4.1.tgz",
  "_shasum": "c6635d7f2ee3a092a9c2dc2a0661009b61e03953",
  "_shrinkwrap": null,
  "_spec": "react-input-calendar",
  "_where": "/home/dev6/Desktop/test-video",
  "author": {
    "name": "Rudeg",
    "email": "rudenko.sergey92@gmail.com",
    "url": "https://github.com/Rudeg"
  },
  "bugs": {
    "url": "https://github.com/Rudeg/react-input-calendar/issues"
  },
  "dependencies": {
    "babel-runtime": "^6.5.0",
    "classnames": "^2.2.3"
  },
  "description": "Datepicker widget react component",
  "devDependencies": {
    "@kadira/storybook": "^2.35.3",
    "babel-cli": "^6.5.0",
    "babel-core": "^6.5.0",
    "babel-eslint": "^6.0.2",
    "babel-loader": "^6.2.4",
    "babel-plugin-transform-runtime": "^6.5.0",
    "babel-polyfill": "^6.5.0",
    "babel-preset-es2015": "^6.5.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-0": "^6.5.0",
    "chai": "^3.5.0",
    "enzyme": "^2.2.0",
    "eslint": "^2.7.0",
    "eslint-config-airbnb": "^8.0.0",
    "eslint-plugin-babel": "^3.2.0",
    "eslint-plugin-jsx-a11y": "^1.0.3",
    "eslint-plugin-react": "^5.0.1",
    "git-url-parse": "^6.0.1",
    "jsdom": "^8.3.1",
    "mocha": "^2.4.5",
    "moment": "^2.10.6",
    "moment-range": "^2.1.0",
    "prop-types": "^15.5.10",
    "raw-loader": "^0.5.1",
    "react": "^15.5.4",
    "react-addons-test-utils": "^15.5.1",
    "react-dom": "^15.5.4",
    "sinon": "^1.17.3",
    "style-loader": "^0.13.1"
  },
  "directories": {},
  "dist": {
    "shasum": "c6635d7f2ee3a092a9c2dc2a0661009b61e03953",
    "tarball": "https://registry.npmjs.org/react-input-calendar/-/react-input-calendar-0.4.1.tgz"
  },
  "engines": {
    "npm": "^3.0.0"
  },
  "gitHead": "345e4b9a4d2ff32094c7dce70b0daecc0f231432",
  "homepage": "http://rudeg.github.io/react-input-calendar/",
  "keywords": [
    "react",
    "datepicker",
    "calendar",
    "input-datepicker",
    "input-calendar",
    "react-input-calendar",
    "react-calendar",
    "react-datepicker",
    "react-component"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "rudeg",
      "email": "rudenko.sergey92@gmail.com"
    }
  ],
  "name": "react-input-calendar",
  "optionalDependencies": {},
  "peerDependencies": {
    "moment": "^2.10.6",
    "moment-range": "^2.1.0",
    "react": "^0.14.7 || ^15.0.0",
    "prop-types": "^15.5.10"
  },
  "readme": "# React Input Calendar\n\nReact component for calendar widget.\n\n## Installation\n\nReact Input Calendar is available as an [npm package](https://www.npmjs.org/package/react-input-calendar).\n```sh\nnpm install react-input-calendar\n```\n\nUse [browserify](http://browserify.org/) and [reactify](https://github.com/andreypopp/reactify) for dependency management and JSX transformation.\n\nAll styles written in CSS and are in style/index.css\n\n## Demo\n\nhttp://rudeg.github.io/react-input-calendar\n\n## Usage\n\n```javascript\nimport Calendar from 'react-input-calendar'\n<Calendar format='DD/MM/YYYY' date='4-12-2014' />\n```\n\n## Dependencies\n\n[React](http://facebook.github.io/react/)\n\n[Moment-range](https://github.com/gf3/moment-range)\n\n\n## API\n\n#### props.format\n\n - `String`\n - default: 'MM-DD-YYYY'\n - Allowed Keys: All formats supported by [moment.js](http://momentjs.com/docs/#/parsing/string-format/)\n - Format of date, which display in input and set in date property\n\n#### props.parsingFormat\n\n - `String` or `Array`\n - default: 'props.format'\n - Allowed Keys: All formats supported by [moment.js](http://momentjs.com/docs/#/parsing/string-format/)\n - This property allows the parsing format to be different to the display format.\n - [Format](http://momentjs.com/docs/#/parsing/string-format/) or [Formats](http://momentjs.com/docs/#/parsing/string-formats/) could be used to parse manually entered dates. The parsing does only happen if the date was entered manually and\n on blur of the input field gets called.\n\n#### props.date\n\n - `String` or `Date`\n - default: `Current date`\n - set initial date value\n\n#### props.minDate\n\n - `String` or `Date`\n - default: `null`\n - set the selectable minimum date\n\n#### props.maxDate\n\n - `String` or `Date`\n - default: `null`\n - set the selectable maximum date\n\n#### props.minView\n\n - `Int` (from 0 to 2)\n - default: `0` (DaysView)\n - Set minimal view. Values:\n  - 0 - days\n  - 1 - months\n  - 2 - years\n\n#### props.computableFormat\n\n - `String`\n - default: 'MM-DD-YYYY'\n - Allowed Keys: All formats supported by [moment.js](http://momentjs.com/docs/#/parsing/string-format/)\n - Format of date for the onChange event. Default on the  date format (ISO 8601) to ease the save of data\n\n#### props.strictDateParsing\n\n - `Boolean`\n - default: `false`\n - If set `true`, the parsing process will catch bad dates and does\n not try to parse the date with the native js date function and does not set\n the date to now either. Therefore the computed date will be reported as 'Invalid date'.\n\n#### props.onChange\n\n - `Function`\n - default: `null`\n - Set a function that will be triggered whenever there is a change in the selected date. It will return the date in the  `props.computableFormat` format.\n\n#### props.onBlur\n\n - `Function`\n - default: `null`\n - Set a function that will be triggered when the input field is blurred. It will return the event and the date in the  \n  props.computableFormat format.\n\n#### props.hideOnBlur\n\n - `Boolean`\n - default: `false`\n - Setting this value to true will hide the calendar, this works best in conjunction with onBlur prop.\n\n#### props.onFocus\n\n - `Function`\n - default: `null`\n - Set a function that will be triggered when the input field is focused.\n\n#### props.closeOnSelect\n\n - `Boolean`\n - Default: `undefined`\n - Define state when date picker would close once the user has clicked on a date.\n\n#### props.openOnInputFocus\n\n - `Boolean`\n - Default: `undefined`\n - Setting this value to true makes the calendar widget open when the input field is focused.\n\n#### props.hideIcon\n\n - `Boolean`\n - Default: `false`\n - If true, the icon next to the input field will not be shown. Make sure you set openOnInputFocus to true if using this.\n\n#### props.hideTouchKeyboard\n\n - `Boolean`\n - default: `false`\n - If true, the keyboard won't be shown on touch devices.\n\n#### props.placeholder\n\n - `String`\n - default: `undefined`\n - Value to show in the input text box if no date is set.\n\n#### props.todayText\n\n - `String`\n - default: `'today'`\n - 'Today' button text.\n\n#### props.inputName\n\n - `String`\n - default: `null`\n - Define the name of the input field where the date picker represents its value.\n\n#### props.inputFieldId\n\n - `String`\n - default: null\n - Define the ID of the input field where the date picker represents it's value. This can be useful when the date picker is   \n  used with a label element. The label element can be bound to the input field using the `label for` attribute.\n\n#### props.inputFieldClass\n\n - `String`\n - default: `'input-calendar-value'`\n - Define the class name of the input field where the date picker represents its value.\n\n#### props.disabled\n\n - `Boolean`\n - default: `false`\n - If true, the input field gets disabled and the icon next to it disappears.\n\n#### props.customIcon\n\n - `String`\n - default: `null`\n - Define the className of the calendar icon. If you need to customize the calendar icon, I would recommend using  [FontAwesome's](http://fontawesome.io/icons/) `fa fa-calendar` icon. Then, update the css style for the icon.\n \n```\n.fa-calendar {\n    color: white;\n}\n\n```\n\n - If null, then the default calendar icon is used   \n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Rudeg/react-input-calendar.git"
  },
  "scripts": {
    "lint": "eslint src",
    "lintfix": "eslint src --fix",
    "prepublish": ". ./.scripts/prepublish.sh",
    "publish-storybook": "bash .scripts/publish_storybook.sh",
    "storybook": "start-storybook -p 9010",
    "test": "npm run lint && npm run testonly",
    "test-watch": "npm run testonly -- --watch --watch-extensions js",
    "testonly": "mocha --require .scripts/mocha_runner src/**/tests/**/*.js"
  },
  "user": "Rudeg",
  "version": "0.4.1",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "npm": "^3.0.0"
      },
      "pkgid": "react-input-calendar@0.4.1"
    },
    {
      "code": "ENOTSUP",
      "required": {
        "npm": "^3.0.0"
      },
      "pkgid": "react-input-calendar@0.4.1"
    }
  ]
}
